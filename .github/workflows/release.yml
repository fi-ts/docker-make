name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker Login
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
      - uses: actions/setup-python@v1
        with:
          python-version: '3.8.5'
      - name: Make tag
        run: echo "::set-env name=TAG_NAME::${GITHUB_REF##*/v}"
      - name: Test
        run: |
          sed -i -e "s/devel/${TAG_NAME}/g" dockermake/version.py
          python -m pip install --upgrade pip
          python -m pip install .[dev]
          python setup.py lint --lint-packages dockermake
          python setup.py nosetests
      - name: Build Linux
        run: |
          docker build -f ci-build/Dockerfile . -t metalstack/docker-make:${TAG_NAME}
          docker cp $(docker create $(docker image ls --format '{{ .ID }}' | sed -n 1p)):/docker-make docker-make
          md5sum docker-make > docker-make.md5
      - name: Publish Dockerfiles
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push metalstack/docker-make:${TAG_NAME}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: docker-make ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: docker-make
          asset_name: docker-make-linux-amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: docker-make.md5
          asset_name: docker-make-linux-amd64.md5
          asset_content_type: application/octet-stream
